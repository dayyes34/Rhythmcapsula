// üìå –ü–ï–†–ï–î –ù–ê–ß–ê–õ–û–ú –£–°–¢–ê–ù–û–í–ò –ü–ê–ö–ï–¢–´
// npm install express cors axios uuid telegraf

const express = require("express");
const fs = require("fs");
const cors = require("cors");
const axios = require('axios');
const { v4: uuidv4 } = require('uuid');
const { Telegraf } = require("telegraf");

const app = express();
const PORT = 3000;
app.use(express.json());
app.use(cors());

// üìå –¢–æ–∫–µ–Ω —Ç–≤–æ–µ–≥–æ Telegram –±–æ—Ç–∞ (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π)
const BOT_TOKEN = "8188912825:AAEEq8lTj3R_a0lx6OKPyt59Nc_jv04GRxs";
const ADMIN_CHAT_ID = "6533586308"; // <-- –ø–æ–ø—Ä–∞–≤—å —ç—Ç–æ –ø–æ—Å–ª–µ —à–∞–≥–∞ –Ω–∏–∂–µ

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª–∞–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
const BOOKINGS_FILE = "./bookings.json";
const PENDING_FILE = "./pending_bookings.json";

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã–µ –∏ –æ–∂–∏–¥–∞—é—â–∏–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
const loadBookings = () => fs.existsSync(BOOKINGS_FILE) ? JSON.parse(fs.readFileSync(BOOKINGS_FILE)) : [];
const saveBookings = (bookings) => fs.writeFileSync(BOOKINGS_FILE, JSON.stringify(bookings, null, 2));

const loadPending = () => fs.existsSync(PENDING_FILE) ? JSON.parse(fs.readFileSync(PENDING_FILE)) : [];
const savePending = (pending) => fs.writeFileSync(PENDING_FILE, JSON.stringify(pending, null, 2));

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
const notifyAdmin = (booking) => {
  const txt = `üì© –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ #${booking.id}\n–î–∞—Ç–∞: ${booking.date}\n–í—Ä–µ–º—è: ${booking.hours.join(", ")}\n–ö–ª–∏–µ–Ω—Ç: ${booking.customer}\nUsername: ${booking.username}\n–°—É–º–º–∞: ${booking.totalprice} —Ä—É–±\n\n‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ: /approve ${booking.id}\n‚ùå –û—Ç–º–µ–Ω–∞: /cancel ${booking.id}`;
  return axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    chat_id: ADMIN_CHAT_ID,
    text: txt
  }).catch(console.error);
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É
const notifyCustomer = (booking) => {
  const txt = `‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞!\n–î–∞—Ç–∞: ${booking.date}\n–í—Ä–µ–º—è: ${booking.hours.join(", ")}\n–ö –æ–ø–ª–∞—Ç–µ: ${booking.totalprice} —Ä—É–±.\n\nüí≥ –†–µ–∫–≤–∏–∑–∏—Ç—ã:\n[–∑–¥–µ—Å—å –≤—Å—Ç–∞–≤—å —Å–≤–æ–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã]`;
  return axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    chat_id: booking.username,
    text: txt
  })
  .catch(() => console.log("‚ö†Ô∏è –ö–ª–∏–µ–Ω—Ç—É –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –û–Ω –¥–æ–ª–∂–µ–Ω –ø–µ—Ä–≤—ã–º –ø–∏—Å–∞—Ç—å –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /start"));
};

// –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç—É –æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏
const notifyApprovedCustomer = (booking) => {
  const txt = `‚úÖüéâ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n–î–∞—Ç–∞: ${booking.date}\n–í—Ä–µ–º—è: ${booking.hours.join(", ")}`;
  return axios.post(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    chat_id: booking.username,
    text: txt
  }).catch(err => console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–ª–∏–µ–Ω—Ç—É:', err));
};

// ‚úÖ –ö–æ–º–∞–Ω–¥–∞ —Å—Ç–∞—Ä—Ç (–¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∏–∞–ª–æ–≥–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º)
bot.start(ctx => ctx.reply("üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –ó–¥–µ—Å—å –±—É–¥—É—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≤–∞—à–∏—Ö –∑–∞—è–≤–∫–∞—Ö. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, —á—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ."));

// ‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ò–ï –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–æ–º
bot.command('approve', ctx => {
  if (String(ctx.message.chat.id) !== ADMIN_CHAT_ID)
    return ctx.reply('üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω!');

  const id = Number(ctx.message.text.split(' ')[1]);
  let pending = loadPending();
  const booking = pending.find(b => b.id === id);

  if (!booking)
    return ctx.reply("‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!");

  pending = pending.filter(b => b.id !== id);
  savePending(pending);

  let bookings = loadBookings();
  bookings.push({...booking, id});
  saveBookings(bookings);

  notifyApprovedCustomer(booking);
  ctx.reply(`‚úÖ –ó–∞—è–≤–∫–∞ #${id} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.`);
});

// ‚úÖ –û–¢–ú–ï–ù–ê –∑–∞—è–≤–∫–∏ –∞–¥–º–∏–Ω–æ–º
bot.command('cancel', ctx => {
  if (String(ctx.message.chat.id) !== ADMIN_CHAT_ID)
    return ctx.reply('üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω!');

  const id = Number(ctx.message.text.split(' ')[1]);
  let pending = loadPending();
  const booking = pending.find(b => b.id === id);

  if (booking) {
    pending = pending.filter(b => b.id !== id);
    savePending(pending);

    ctx.reply(`üö´ –ó–∞—è–≤–∫–∞ #${id} —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞.`);
  } else {
    ctx.reply("‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ä–µ–¥–∏ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è!");
  }
});

// ‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —É–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –∑–∞—è–≤–∫–∏
bot.command('remove', ctx => {
  if (String(ctx.message.chat.id) !== ADMIN_CHAT_ID)
    return ctx.reply('üö´ –í—ã –Ω–µ –∞–¥–º–∏–Ω!');

  const id = Number(ctx.message.text.split(' ')[1]);
  let bookings = loadBookings();
  const bookingExists = bookings.some(b => b.id === id);

  if (!bookingExists)
    return ctx.reply(`‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞ #${id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.`);

  bookings = bookings.filter(b => b.id !== id);
  saveBookings(bookings);

  ctx.reply(`üö´ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–∞—è –∑–∞—è–≤–∫–∞ #${id} —É–¥–∞–ª–µ–Ω–∞.`);
});

// üîÑ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook
app.use(bot.webhookCallback('/bot'));
app.listen(PORT, () => {
  console.log(`üöÄ –°–µ—Ä–≤–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ ${PORT}`);
  bot.telegram.setWebhook(`https://drumfitness.ru/bot`)
    .then(() => console.log('‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'))
    .catch(console.error);
});

// ‚ùóÔ∏è –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–π bot.launch() –∏ –≤—Ç–æ—Ä–æ–π app.listen()